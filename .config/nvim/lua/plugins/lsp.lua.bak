return {
    {
        "VonHeikemen/lsp-zero.nvim",
        branch = "v3.x",
        lazy = true,
        config = false,
        init = function()
            vim.g.lsp_zero_extend_cmp = 0
            vim.g.lsp_zero_extend_lspconfig = 0
        end,
    },
    {
        "williamboman/mason.nvim",
        lazy = false,
        config = true,
    },
    {
        "hrsh7th/nvim-cmp",
        event = "InsertEnter",
        dependencies = {
            {"L3MON4D3/LuaSnip"},
            {"onsails/lspkind.nvim"},
            {"hrsh7th/cmp-nvim-lua"},
            {"hrsh7th/cmp-path"},
            {"hrsh7th/cmp-cmdline"},
            {"hrsh7th/cmp-buffer"},
            {"hrsh7th/cmp-omni"},
        },
        config = function()
            local lsp_zero = require("lsp-zero")
            lsp_zero.extend_cmp()
            local cmp = require("cmp")
            local cmp_action = lsp_zero.cmp_action()
            cmp.setup({
                -- formatting = lsp_zero.cmp_format(),
                formatting = {
                    fields = {'abbr','kind','menu'},
                    format = require("lspkind").cmp_format({
                        mode = 'symbol',
                        maxwidth = 40,
                        ellipsis_char = '...',
                    })
                },
                mapping = cmp.mapping.preset.insert({
                    ['<C-Space>'] = cmp.mapping.complete(),
                    ['<C-u>'] = cmp.mapping.scroll_docs(-4),
                    ['<C-d>'] = cmp.mapping.scroll_docs(4),
                    ['<C-f>'] = cmp_action.luasnip_jump_forward(),
                    ['<C-b>'] = cmp_action.luasnip_jump_backward(),
                    ['<CR>'] = cmp.mapping.confirm({ select = true }),
                }),
                sources = {
                    { name = "nvim_lsp" },
                    { name = "nvim_lua" },
                    { name = "buffer" },
                    { name = "path" },
                    { name = "omni" },
                }
            })
            cmp.setup.cmdline({ '/', '?' }, {
                mapping = cmp.mapping.preset.cmdline(),
                sources = { { name = 'buffer' } },
            })
            cmp.setup.cmdline(':', {
                mapping = cmp.mapping.preset.cmdline(),
                sources = cmp.config.sources(
                    { { name = 'path' } },
                    { { name = 'cmdline' } }
                )
            })
        end,
    },
    {
        "neovim/nvim-lspconfig",
        cmd = {"LspInfo","LspInstall","LspStart"},
        event = {"BufReadPre","BufNewFile"},
        dependencies = {
            {"hrsh7th/cmp-nvim-lsp"},
            {"williamboman/mason-lspconfig.nvim"},
        },
        config = function()
            local lsp_zero = require("lsp-zero")
            lsp_zero.extend_lspconfig()
            lsp_zero.on_attach(function(client, bufnr)
                lsp_zero.default_keymaps({buffer = bufnr})
            end)
            require("mason-lspconfig").setup({
                ensure_installed = {"pyright","bashls","clangd","lua_ls"},
                handlers = {
                    lsp_zero.default_setup,
                    ['lua_ls'] = function()
                        local lua_opts = lsp_zero.nvim_lua_ls()
                        require("lspconfig").lua_ls.setup(lua_opts)
                    end,
                },
            })
        end,
    }
}
